"use strict";angular.module("markovApp",["ngAnimate","ngCookies","ngResource","ngRoute","ngSanitize","ngTouch","as.sortable"]).config(["$routeProvider",function(a){a.when("/",{templateUrl:"views/main.html",controller:"MainCtrl",controllerAs:"main"}).when("/about",{templateUrl:"views/about.html",controller:"AboutCtrl",controllerAs:"about"}).otherwise({redirectTo:"/"})}]),angular.module("markovApp").controller("MainCtrl",["$scope",function(a){function b(){a.results=[],a.results.push({display:a.data.input,used:"-"});for(var b=a.data.maxIterations,c=a.data.input,e=0;b>e;e++){for(var f=!1,g=0;g<a.data.rules.length;g++){var h=a.data.rules[g].from,i=a.data.rules[g].to,j=a.data.rules[g].terminating,k=d(h,c);if(k.length>0){var l=c.substr(0,k[0]),m=c.substr(k[0]+h.length);if(c=l+i+m,a.results.push({display:l+"<b>"+i+"</b>"+m,used:g+1}),j)return e+1;f=!0;break}}if(!f)break}return console.log(e+" ## "+b),e-b}function c(){}function d(a,b){for(var c,d=0,e=[];(c=b.indexOf(a,d))>-1;)e.push(c),d=c+1;return e}a.data={alphabet:["1","2","3","4"],rules:[{from:"3",terminating:!1,to:"4"},{from:"2",terminating:!0,to:"3"},{from:"1",terminating:!1,to:"2"}],mode:"markov",maxIterations:100,input:"123"},a.letter="",a.ruleFrom="",a.ruleTo="",a.results=[],a.addLetter=function(b){(void 0===b||13===b.which)&&""!==a.letter&&($.inArray(a.letter,a.data.alphabet)<0?(a.data.alphabet.push(a.letter),console.log("Added "+a.letter+" to the alphabet")):console.log("Letter already in alphabet"),$("#alphabet").focus(),a.letter="")},a.letterUsed=function(b){for(var c=0;c<a.data.rules.length;c++){var e=a.data.rules[c];if(d(b,e.from).length>0||d(b,e.to).length>0)return"btn-success"}return"btn-warning"},a.addRule=function(b,c){if(void 0!==b&&void 0!==c){if(13!==c.which)return;if("from"===b)return void $("#ruleTo").focus()}return""===a.ruleFrom&&""===a.ruleTo?void $("#ruleFrom").focus():(a.data.rules.push({from:a.ruleFrom,to:a.ruleTo,terminating:!1}),console.log('Added rule "'+a.ruleFrom+'"->"'+a.ruleTo+'"'),a.ruleFrom="",a.ruleTo="",void $("#ruleFrom").focus())},a.ruleUsed=function(b,c){for(var d=b+c,e=0;e<d.length;e++)if($.inArray(d[e],a.data.alphabet)<0)return"input-group-warning";return"input-group-success"},a.dragControlListeners={accept:function(){return!0}},a.runAutomat=function(d){if((void 0===d||13===d.which)&&""!==a.data.input)if("markov"===a.data.mode){var e=b();e>0?a.results.push({display:"End1: Terminating rule",used:e}):0>e?a.results.push({display:"End2: No rule executable",used:e}):a.results.push({display:"End3: Max iterations reached",used:e})}else"semithue"===a.data.mode&&c()}}]),angular.module("markovApp").controller("AboutCtrl",function(){this.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"]}),angular.module("markovApp").filter("emptyFilter",function(){return function(a){return""===a?"ε":a}}),angular.module("markovApp").run(["$templateCache",function(a){a.put("views/about.html","<p>This is the about view.</p>"),a.put("views/main.html",'<div class="row row-spacer"> <div class="col-sm-6 col-xs-12"> <form class="form-inline"> <div class="form-group form-radio"> <div class="radio-inline"> <label> <input id="mode1" value="markov" name="modeselect" type="radio" ng-model="data.mode"> Markov Mode </label> </div> <div class="radio-inline"> <label> <input id="mode2" value="semithue" name="modeselect" type="radio" ng-model="data.mode"> Semi-Thue Mode </label> </div> </div> </form> </div> <div class="col-sm-6 col-xs-12"> <form class="form-inline"> <div class="form-group"> <label for="iterations">Max Iterations</label> <input type="number" class="form-control" id="iterations" ng-model="data.maxIterations"> </div> </form> </div> </div> <div class="row row-spacer"> <div class="col-sm-3 col-xs-4"> <label for="basic-url">Alphabet</label> <div class="input-group"> <input id="alphabet" type="text" class="form-control" maxlength="1" ng-model="letter" ng-keypress="addLetter($event)"> <span class="input-group-btn"> <button class="btn btn-default" type="button" ng-click="addLetter()">Ok</button> </span> </div> </div> <div class="col-sm-5 col-xs-8"> <label for="basic-url">Production Rules</label> <div class="input-group"> <input id="ruleFrom" type="text" class="form-control" ng-model="ruleFrom" ng-keypress="addRule(\'from\', $event)"> <span class="input-group-addon">→</span> <input id="ruleTo" type="text" class="form-control" ng-model="ruleTo" ng-keypress="addRule(\'to\', $event)"> <span class="input-group-btn"> <button class="btn btn-default" type="button" ng-click="addRule()">Ok</button> </span> </div> </div> <div class="col-sm-4 col-xs-12"> <label for="basic-url">Input</label> <div class="input-group"> <input type="text" class="form-control" ng-model="data.input" ng-keypress="runAutomat($event)"> <span class="input-group-btn"> <button class="btn btn-default" type="button" ng-click="runAutomat()">Run</button> </span> </div> </div> </div> <div class="row row-spacer"> <div class="col-sm-3 col-xs-4"> <div> <div class="btn-group-vertical output" role="group"> <button type="button" class="btn" ng-class="letterUsed(letter)" title="Click to remove" ng-repeat="letter in data.alphabet track by $index" ng-click="data.alphabet.splice($index, 1)">{{letter}}</button> </div> </div> </div> <div class="col-sm-5 col-xs-8"> <div id="prodrules" as-sortable="dragControlListeners" ng-model="data.rules"> <span class="input-group output" ng-repeat="rule in data.rules" as-sortable-item> <span class="input-group-addon" title="Rule number">{{$index + 1}})</span> <span ng-class="ruleUsed(rule.from, rule.to)">{{rule.from | emptyFilter}}→{{rule.to | emptyFilter}}</span> <span class="input-group-addon" as-sortable-item-handle> <i class="glyphicon glyphicon-sort" title="Drag to move"></i> </span> <span class="input-group-btn"> <button class="btn btn-default" ng-class="{\'btn-danger\': rule.terminating}" type="button" ng-show="data.mode == \'markov\'" ng-click="rule.terminating = !rule.terminating" title="Toggle terminating rule"> <i class="glyphicon glyphicon-off"></i> </button> <button class="btn btn-danger" type="button" title="Delete rule" ng-click="data.rules.splice(data.rules.indexOf(rule), 1)"> <i class="glyphicon glyphicon-remove"></i> </button> </span> </span> </div> </div> <div class="col-sm-4 col-xs-12"> <div> <span class="input-group output" ng-repeat="result in results track by $index"> <span class="input-group-addon" title="Iteration">{{$index}}</span> <span class="input-group-addon" title="{{$last ? \'Terminating rule / Rules left\' : \'Rule used\'}}">{{result.used}})</span> <span class="input-group-important" ng-bind-html="result.display"></span> </span> </div> </div> </div>')}]);